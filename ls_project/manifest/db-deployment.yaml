apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: db
    spec:
      containers:
        - env:
            - name: PGADMIN_DEFAULT_EMAIL
              valueFrom:
                configMapKeyRef:
                  key: PGADMIN_DEFAULT_EMAIL
                  name: env
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: PGADMIN_DEFAULT_PASSWORD
                  name: env
            - name: PGDATABASE
              valueFrom:
                configMapKeyRef:
                  key: PGDATABASE
                  name: env
            - name: PGPASSWORD
              valueFrom:
                configMapKeyRef:
                  key: PGPASSWORD
                  name: env
            - name: PGPORT
              valueFrom:
                configMapKeyRef:
                  key: PGPORT
                  name: env
            - name: PGUSER
              valueFrom:
                configMapKeyRef:
                  key: PGUSER
                  name: env
            - name: POSTGRES_DB
            - name: POSTGRES_PASSWORD
            - name: POSTGRES_USER
          image: takudzwachikanga/postgres:v1
          name: postgres-db
          ports:
            - containerPort: 5432
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db-claim0
      restartPolicy: Always
      volumes:
        - name: db-claim0
          persistentVolumeClaim:
            claimName: db-claim0
status: {}
